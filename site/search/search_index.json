{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"introduce","text":"<p>\u8fd9\u91cc\u662fcarry\u7684blog\uff0c\u6211\u662f\u4e00\u540d23\u7ea7iser</p>"},{"location":"#_1","title":"\u672c\u535a\u5ba2\u4f5c\u7528","text":"<p>\u672c\u535a\u5ba2\u4e3b\u8981\u8bb0\u5f55\u4e00\u4e9b\u8bfe\u7a0b\u7b14\u8bb0\uff0c\u4f5c\u4e1a\u4ee5\u53cactf\u6bd4\u8d5b\u7684writeup</p>"},{"location":"#_2","title":"\u5e0c\u671b\u5927\u5bb6\u5728\u8fd9\u91cc\u73a9\u7684\u5f00\u5fc3","text":""},{"location":"new_star_writeup/","title":"week 1","text":""},{"location":"new_star_writeup/#crypto","title":"crypto","text":""},{"location":"new_star_writeup/#base","title":"base","text":"<p>4C4A575851324332474E324547554B494A5A4446513653434E564D444154545A4B354D45454D434E4959345536544B474D5134513D3D3D3D</p> <p>base32-&gt;</p> <p>ZmxhZ3tCQHNFXzBmX0NyWXB0MF9OMFd9</p> <p>base64-&gt;</p> <p>flag{B@sE_0f_CrYpt0_N0W}</p>"},{"location":"new_star_writeup/#strange-king","title":"Strange King","text":"<p>ksjr{EcxvpdErSvcDgdgEzxqjql} \u521a\u5f00\u59cb\u8bd5\u7684\u51ef\u6492\uff0c\u53d1\u73b0\u627e\u4e0d\u5230\uff0c\u4ed4\u7ec6\u89c2\u5bdf\u53d1\u73b0ksjr\u548cflag\u7684\u504f\u79fb\u91cf\u662f5 7 9 11 \uff0c\u4e8e\u662f\u731c\u6d4b\u540e\u7eed\u5c31\u662f13 15\u8fd9\u6837\uff0c\u4e8e\u662f\u5199\u4e2a\u811a\u672c\uff0c\u6ce8\u610fmod 26</p> <pre><code>def dec(cipher,i,li):\n    if(cipher[i]&gt;='a'and cipher[i]&lt;='z'):\n        return chr((ord(cipher[i])+((-li[i])%26)-ord('a'))%26+ord('a'))\n    elif(cipher[i]&gt;='A'and cipher[i]&lt;='Z'):\n        return chr((ord(cipher[i])+((-li[i])%26)-ord('A'))%26+ord('A'))\n    else :\n        return cipher[i]\ncipher=\"ksjr{EcxvpdErSvcDgdgEzxqjql}\"\n# print(ord('k')-ord('f'))\n# print(ord('s')-ord('l'))\n# print(ord('j')-ord('a'))\n# print(ord('r')-ord('g'))\n# print(chr(ord('E')+((-15)%26)))\nli=[]\nIV=5\nfor i in range(len(cipher)):\n    li.append(IV)\n    IV+=2\nflag=\"\"\nfor i in range(len(cipher)):\n    flag+=dec(cipher,i,li)\nprint(flag)\n</code></pre> <p>flag{PleaseDoNotStopLearing}</p>"},{"location":"new_star_writeup/#xor","title":"xor","text":"<p>\u9898\u76ee</p> <pre><code>#As a freshman starting in 2024, you should know something about XOR, so this task is for you to sign in.\n\nfrom pwn import xor\n#The Python pwntools library has a convenient xor() function that can XOR together data of different types and lengths\nfrom Crypto.Util.number import *\n\nkey = b'New_Star_CTF'\nflag='flag{*******************}'\n\nm1 = bytes_to_long(bytes(flag[:13], encoding='utf-8'))\nm2 = flag[13:]\n\nc1 = m1 ^ bytes_to_long(key)\nc2 = xor(key, m2)\nprint('c1=',c1)\nprint('c2=',c2)\n# c1= 8091799978721254458294926060841\n# c2= b';:\\x1c1&lt;\\x03&gt;*\\x10\\x11u;'\n</code></pre> <p>\u811a\u672c</p> <pre><code>c1= 8091799978721254458294926060841\nc2= b';:\\x1c1&lt;\\x03&gt;*\\x10\\x11u;'\n\nm1=c1^bytes_to_long(key)\nm2=xor(key,c2)\nprint(long_to_bytes(m1))\nprint(m2)\nprint(long_to_bytes(m1).decode()+m2.decode())\n</code></pre> <p>flag{0ops!_you_know_XOR!}</p>"},{"location":"new_star_writeup/#_1","title":"\u4e00\u773c\u79d2\u4e86","text":"<pre><code>from Crypto.Util.number import *\nfrom gmpy2 import *\nfrom serct import flag\np = getPrime(512)\nq = getPrime(512)\nn = p*q\nm = bytes_to_long(flag)\ne = 65537\nc = powmod(m, e, n)\nprint(n)\nprint(c)\n\nfrom Crypto.Util.number import *\n# 52147017298260357180329101776864095134806848020663558064141648200366079331962132411967917697877875277103045755972006084078559453777291403087575061382674872573336431876500128247133861957730154418461680506403680189755399752882558438393107151815794295272358955300914752523377417192504702798450787430403387076153\n#c=48757373363225981717076130816529380470563968650367175499612268073517990636849798038662283440350470812898424299904371831068541394247432423751879457624606194334196130444478878533092854342610288522236409554286954091860638388043037601371807379269588474814290382239910358697485110591812060488786552463208464541069\n</code></pre> <p>\u6254\u8fdbfactordb\u4e2d\u79d2\u4e86\u5206\u89e3\uff0c\u7136\u540e\u5957\u516c\u5f0f</p> <pre><code>from Crypto.Util.number import *\n# 52147017298260357180329101776864095134806848020663558064141648200366079331962132411967917697877875277103045755972006084078559453777291403087575061382674872573336431876500128247133861957730154418461680506403680189755399752882558438393107151815794295272358955300914752523377417192504702798450787430403387076153\nc=48757373363225981717076130816529380470563968650367175499612268073517990636849798038662283440350470812898424299904371831068541394247432423751879457624606194334196130444478878533092854342610288522236409554286954091860638388043037601371807379269588474814290382239910358697485110591812060488786552463208464541069\np=7221289171488727827673517139597844534869368289455419695964957239047692699919030405800116133805855968123601433247022090070114331842771417566928809956044421\nq=7221289171488727827673517139597844534869368289455419695964957239047692699919030405800116133805855968123601433247022090070114331842771417566928809956045093\ne=0x10001\nphi=(p-1)*(q-1)\nd=inverse(e,phi)\nprint(long_to_bytes(pow(c,d,p*q)))\n</code></pre> <p>flag{9cd4b35a-affc-422a-9862-58e1cc3ff8d2}</p>"}]}